/*------------------------------------*\
  #BASIC
\*------------------------------------*/

/**
 * Final main CSS file composed of separated Sass files. New created Sass files
 * need to be added here to have any effect.
 *
 * The order of the import directives is important. Changing the file order
 * within an import directive however should do no harm in most cases.
 *
 * We’re using the CSS Guidelines (https://cssguidelin.es/) in all CSS files for
 * “writing sane, manageable, scalable CSS”. For cases, that are not covered in
 * the CSS Guidelines, please consult the Sass Guidelines
 * (https://sass-guidelin.es/).
 *
 * The architecture stems from ITCSS (https://itcss.io/). Each layer is
 * documented below. The following article gives you a detailed explanation to
 * this approach:
 *
 * https://www.creativebloq.com/web-design/manage-large-css-projects-itcss-101517528
 */





/*------------------------------------*\
  #SETTINGS
\*------------------------------------*/

/**
 * “This layer should only house settings that need to be accessed from
 * anywhere. Settings like $heading-size-1 should be defined in the Headings
 * partial. This ensures this layer stays nice and slim, and means that most
 * settings can be found alongside the code that uses them, making finding
 * things far simpler.
 *
 * Examples of global settings might be things like the base font size, colour
 * palettes, config (for example, $environment: dev;) and so on.”
 *
 * (Source: see link at the top)
 */

/*
Settings

Styleguide 1.0
*/

@import
'01-settings/settings.breakpoints'
;





/*------------------------------------*\
  #TOOLS
\*------------------------------------*/

/**
 * “[…] globally available tooling – namely mixins and functions. Any mixin or
 * function that does not need accessing globally should belong in the partial
 * to which it relates. The Tools layer comes after the Settings layer because a
 * mixin may require one of the global settings as a default parameter. Examples
 * of global tools might be gradient mixins, font-sizing mixins and so on.”
 *
 * (Source: see link at the top)
 */

@import
'02-tools/tools.functions'
;







/*------------------------------------*\
  #COMPONENTS
\*------------------------------------*/

/**
 * “The Components layer is where we begin to style recognisable pieces of UI.
 * We're still binding onto classes here, so our specificity hasn't yet
 * increased. However, this layer is more explicit than the last one in that we
 * are now styling explicit, designed pieces of the DOM.
 *
 * We shouldn't find any selectors with a lower specificity than one class in
 * this layer. This is where the majority of your work will happen after initial
 * project set-up. Adding new components and features usually makes up the vast
 * majority of development.”
 *
 * (Source: see link at the top)
 */

/*
Components

Styleguide 4.0
*/

@import
'06-components/components.in2iframeconsent'
;
