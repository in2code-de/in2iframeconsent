{"version":3,"file":"in2iframeconsent.module.js","sources":["../../src/CookieManager.ts","../../src/index.ts"],"sourcesContent":["import { Cookie } from './types';\n\nexport default class CookieManager {\n  public static _getCookie(name: string): string {\n    const b = document.cookie.match(`(^|;)\\\\s*${name}\\\\s*=\\\\s*([^;]+)`);\n\n    if (b) return b.pop() || '';\n    return '';\n  }\n\n  public static _setCookie({ name, value, expirationYears }: Cookie): void {\n    const domain = window.location.hostname;\n\n    const expirationDate = new Date();\n    expirationDate.setFullYear(expirationDate.getFullYear() + expirationYears);\n    const expirationDateString = expirationDate.toUTCString();\n\n    document.cookie = `${name}=${value};expires=${expirationDateString};domain=${domain};path=/;SameSite=None;secure`;\n  }\n\n  public static _deleteCookie(name: string): void {\n    this._setCookie({\n      name,\n      value: '',\n      expirationYears: -1,\n    });\n  }\n}\n","import { version } from '../package.json';\nimport { IframeDataAttribute } from './types';\nimport CookieManager from './CookieManager';\n\nclass In2iframeswitch {\n  private _cookieName: string = 'iframeswitch';\n  private _expirationYears: number = 10;\n\n  constructor() {\n    this._addButtonEvents();\n    this._autoEnableIframes();\n    In2iframeswitch._addDomainInformation();\n\n    window.iframeSwitch = this || {};\n  }\n\n  /**\n     * Replaces iFrameconsentbox with correct iFrame\n     * @param container\n     * @private\n     */\n  private static _changeElementToIframe(container: HTMLElement): void {\n    const attributes = In2iframeswitch._getAllDataAttributes(container);\n    const iframe = document.createElement('iframe');\n\n    attributes.forEach((attribute) => {\n      iframe.setAttribute(\n        attribute.name,\n        attribute.value,\n      );\n    });\n\n    const parentNode = container.parentNode as HTMLElement;\n    parentNode.insertBefore(iframe, container);\n    parentNode.classList.remove('iframeswitch-init');\n    parentNode.removeChild(container);\n  }\n\n  /**\n     * Enable Iframe, if src of the iframe is set in cookie for iframeswitch\n     * @private\n     */\n  private _autoEnableIframes(): void {\n    const elements = document.querySelectorAll<HTMLElement>('[data-iframeswitch-src]');\n    const cookieString = CookieManager._getCookie(this._cookieName);\n    const activeCookies: string[] = cookieString.split(',');\n\n    elements.forEach((element) => {\n      if (activeCookies.includes('*')) {\n        In2iframeswitch._changeElementToIframe(element);\n        return;\n      }\n\n      const iframeURL:string | null = element.getAttribute('data-iframeswitch-src');\n\n      if (iframeURL) {\n        const iframeSource = In2iframeswitch._extractHostname(iframeURL);\n\n        activeCookies.forEach((currentCookie) => {\n          if (currentCookie === iframeSource) {\n            In2iframeswitch._changeElementToIframe(element);\n          }\n        });\n      }\n    });\n  }\n\n  /**\n     * Replace <span data-iframeswitch-uri=\"true\"></span> with the iFrame URL.\n     * So it can be used inside the container\n     */\n  private static _addDomainInformation(): void {\n    const elements = document.querySelectorAll<HTMLElement>('[data-iframeswitch-uri]');\n    elements.forEach((element) => {\n      const parent = In2iframeswitch._closest(\n          element,\n          '[data-iframeswitch-src]',\n      );\n\n      if (parent) {\n        const parentSrc = parent.getAttribute('data-iframeswitch-src') || 'error, domain not found';\n        element.innerHTML = In2iframeswitch._extractHostname(parentSrc);\n      }\n    });\n  }\n\n  private _addButtonEvents(): void {\n    const elements = document.querySelectorAll<HTMLElement>('[data-iframeswitch-src]');\n\n    elements.forEach((element) => {\n      const elementStart = element.querySelector('[data-iframeswitch-submit]');\n\n      if (elementStart) {\n        elementStart.addEventListener(\n            'click',\n            (event) => {\n              const currentCookies = CookieManager._getCookie(this._cookieName);\n              if (currentCookies === '*') return;\n\n              const container = In2iframeswitch._closest(\n                  event.target as HTMLElement,\n                  '[data-iframeswitch-src]',\n              );\n              if (!container) return;\n\n              const iframeSwitchURL = container.getAttribute('data-iframeswitch-src');\n              if (!iframeSwitchURL) return;\n\n              const newCookie = In2iframeswitch._extractHostname(iframeSwitchURL);\n\n              CookieManager._setCookie({\n                name: this._cookieName,\n                value: currentCookies.length > 0 ? `${currentCookies},${newCookie}` : newCookie,\n                expirationYears: this._expirationYears,\n              })\n\n              this._autoEnableIframes();\n            },\n        );\n      }\n    });\n  }\n\n  /**\n     * JavaScript pendent to jQuerys closest() function\n     */\n  private static _closest(element: HTMLElement, selector: string): HTMLElement | null {\n    let matchesFn;\n\n    // find vendor prefix\n    [\n      'matches',\n      'webkitMatchesSelector',\n      'mozMatchesSelector',\n      'msMatchesSelector',\n      'oMatchesSelector',\n    ].some((fn) => {\n      // @ts-ignore\n      if (typeof document.body[fn] === 'function') {\n        matchesFn = fn;\n        return true;\n      }\n      return false;\n    });\n\n    let parent: HTMLElement;\n\n    // traverse parents\n    while (element) {\n      // @ts-ignore\n      parent = element.parentElement;\n      // @ts-ignore\n      if (parent && parent[matchesFn](selector)) {\n        return parent;\n      }\n      element = parent;\n    }\n\n    return null;\n  }\n\n  private static _getAllDataAttributes(container: HTMLElement): IframeDataAttribute[] {\n    const attributes: {name: string, value: string}[] = [];\n\n    Array.from(container.attributes).forEach((attribute) => {\n      if (attribute.name.indexOf('data-iframeswitch-') !== -1) {\n        attributes.push({\n          name: attribute.name.replace('data-iframeswitch-', ''),\n          value: attribute.value,\n        });\n      }\n    });\n\n    return attributes;\n  }\n\n  private static _extractHostname(url: string): string {\n    let hostname: string;\n\n    if (url.indexOf('//') > -1) {\n      hostname = url.split('/')[2];\n    } else {\n      hostname = url.split('/')[0];\n    }\n\n    hostname = hostname.split(':')[0];\n    hostname = hostname.split('?')[0];\n\n    return hostname || '';\n  }\n\n  /**\n     * Enables all iFrameConsents\n     */\n  public enableAll(): void {\n    CookieManager._setCookie({\n      name: this._cookieName,\n      value: '*',\n      expirationYears: this._expirationYears,\n    });\n\n    this._autoEnableIframes();\n  }\n\n  /**\n     * Disables all accepted iFrameConsents and deletes all in2iframeconsent Cookies\n     */\n  public disableAll(): void {\n    CookieManager._deleteCookie(this._cookieName);\n  }\n\n  public getVersion(): void {\n    console.log(`in2iframeconsent is running on version ${version} ðŸŒˆ`);\n  }\n}\n\n// eslint-disable-next-line no-new\nnew In2iframeswitch();\n"],"names":["CookieManager","_getCookie","name","b","document","cookie","match","pop","_setCookie","value","expirationYears","domain","window","location","hostname","expirationDate","Date","setFullYear","getFullYear","expirationDateString","toUTCString","_deleteCookie","this","_cookieName","_expirationYears","_addButtonEvents","_autoEnableIframes","In2iframeswitch","_addDomainInformation","iframeSwitch","_changeElementToIframe","container","attributes","_getAllDataAttributes","iframe","createElement","forEach","attribute","setAttribute","parentNode","insertBefore","classList","remove","removeChild","elements","querySelectorAll","activeCookies","split","element","includes","iframeURL","getAttribute","iframeSource","_extractHostname","currentCookie","parent","_closest","parentSrc","innerHTML","elementStart","querySelector","addEventListener","event","currentCookies","_this","target","iframeSwitchURL","newCookie","length","selector","matchesFn","some","fn","body","parentElement","Array","from","indexOf","push","replace","url","enableAll","disableAll","getVersion","console","log"],"mappings":"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"}