{"version":3,"file":"in2iframeconsent.cjs","sources":["../../src/CookieManager.ts","../../src/index.ts"],"sourcesContent":["import { Cookie } from './types';\n\nexport default class CookieManager {\n  public static getCookie(name: string): string {\n    const b = document.cookie.match(`(^|;)\\\\s*${name}\\\\s*=\\\\s*([^;]+)`);\n\n    if (b) return b.pop() || '';\n    return '';\n  }\n\n  public static setCookie({ name, value, expirationYears }: Cookie): void {\n    const domain = window.location.hostname;\n\n    const expirationDate = new Date();\n    expirationDate.setFullYear(expirationDate.getFullYear() + expirationYears);\n    const expirationDateString = expirationDate.toUTCString();\n\n    document.cookie = `${name}=${value};expires=${expirationDateString};domain=${domain};path=/;SameSite=None;secure`;\n  }\n\n  public static deleteCookie(name: string): void {\n    this.setCookie({\n      name,\n      value: 'nothing',\n      expirationYears: -100,\n    });\n  }\n}\n","import { IframeDataAttribute } from './types';\nimport CookieManager from './CookieManager';\n\nclass In2iframeswitch {\n  private cookieName: string = 'iframeswitch';\n\n  private expirationYears: number = 10;\n\n  constructor() {\n    this.addButtonEvents();\n    this.autoEnableIframes();\n    In2iframeswitch.addDomainInformation();\n\n    window.iframeSwitch = window.iframeSwitch || {};\n  }\n\n  /**\n     * Replaces iFrameconsentbox with correct iFrame\n     * @param container\n     * @private\n     */\n  private static changeElementToIframe(container: HTMLElement): void {\n    const attributes = In2iframeswitch.getAllDataAttributes(container);\n    const iframe = document.createElement('iframe');\n\n    attributes.forEach((attribute) => {\n      iframe.setAttribute(\n        attribute.name,\n        attribute.value,\n      );\n    });\n\n    const parentNode = container.parentNode as HTMLElement;\n    parentNode.insertBefore(iframe, container);\n    parentNode.classList.remove('iframeswitch-init');\n    parentNode.removeChild(container);\n  }\n\n  /**\n     * Enable Iframe, if src of the iframe is set in cookie for iframeswitch\n     * @private\n     */\n  private autoEnableIframes(): void {\n    const elements = document.querySelectorAll<HTMLElement>('[data-iframeswitch-src]');\n    const cookieString = CookieManager.getCookie(this.cookieName);\n    const activeCookies: string[] = cookieString.split(',');\n\n    elements.forEach((element) => {\n      if (activeCookies.includes('*')) {\n        In2iframeswitch.changeElementToIframe(element);\n        return;\n      }\n\n      const iframeURL:string | null = element.getAttribute('data-iframeswitch-src');\n\n      if (iframeURL) {\n        const iframeSource = In2iframeswitch.extractHostname(iframeURL);\n\n        activeCookies.forEach((currentCookie) => {\n          if (currentCookie === iframeSource) {\n            In2iframeswitch.changeElementToIframe(element);\n          }\n        });\n      }\n    });\n  }\n\n  /**\n     * Replace <span data-iframeswitch-uri=\"true\"></span> with the iFrame URL.\n     * So it can be used inside the container\n     */\n  private static addDomainInformation(): void {\n    const elements = document.querySelectorAll<HTMLElement>('[data-iframeswitch-uri]');\n    elements.forEach((element) => {\n      const parent = In2iframeswitch.closest(\n          element,\n          '[data-iframeswitch-src]',\n      );\n\n      if (parent) {\n        const parentSrc = parent.getAttribute('data-iframeswitch-src') || 'error, domain not found';\n        element.innerHTML = In2iframeswitch.extractHostname(parentSrc);\n      }\n    });\n  }\n\n  private addButtonEvents(): void {\n    const elements = document.querySelectorAll<HTMLElement>('[data-iframeswitch-src]');\n\n    elements.forEach((element) => {\n      const elementStart = element.querySelector('[data-iframeswitch-submit]');\n\n      if (elementStart) {\n        elementStart.addEventListener(\n            'click',\n            (event) => {\n              const currentCookies = CookieManager.getCookie(this.cookieName);\n              if (currentCookies === '*') return;\n\n              const container = In2iframeswitch.closest(\n                  event.target as HTMLElement,\n                  '[data-iframeswitch-src]',\n              );\n              if (!container) return;\n\n              const iframeSwitchURL = container.getAttribute('data-iframeswitch-src');\n              if (!iframeSwitchURL) return;\n\n              const newCookie = In2iframeswitch.extractHostname(iframeSwitchURL);\n\n              CookieManager.setCookie({\n                name: this.cookieName,\n                value: currentCookies.length > 0 ? `${currentCookies},${newCookie}` : newCookie,\n                expirationYears: this.expirationYears,\n              })\n\n              this.autoEnableIframes();\n            },\n        );\n      }\n    });\n  }\n\n  /**\n     * JavaScript pendent to jQuerys closest() function\n     */\n  private static closest(element: HTMLElement, selector: string): HTMLElement | null {\n    let matchesFn;\n\n    // find vendor prefix\n    [\n      'matches',\n      'webkitMatchesSelector',\n      'mozMatchesSelector',\n      'msMatchesSelector',\n      'oMatchesSelector',\n    ].some((fn) => {\n      // @ts-ignore\n      if (typeof document.body[fn] === 'function') {\n        matchesFn = fn;\n        return true;\n      }\n      return false;\n    });\n\n    let parent: HTMLElement;\n\n    // traverse parents\n    while (element) {\n      // @ts-ignore\n      parent = element.parentElement;\n      // @ts-ignore\n      if (parent && parent[matchesFn](selector)) {\n        return parent;\n      }\n      element = parent;\n    }\n\n    return null;\n  }\n\n  private static getAllDataAttributes(container: HTMLElement): IframeDataAttribute[] {\n    const attributes: {name: string, value: string}[] = [];\n\n    Array.from(container.attributes).forEach((attribute) => {\n      if (attribute.name.indexOf('data-iframeswitch-') !== -1) {\n        attributes.push({\n          name: attribute.name.replace('data-iframeswitch-', ''),\n          value: attribute.value,\n        });\n      }\n    });\n\n    return attributes;\n  }\n\n  private static extractHostname(url: string): string {\n    let hostname: string;\n\n    if (url.indexOf('//') > -1) {\n      hostname = url.split('/')[2];\n    } else {\n      hostname = url.split('/')[0];\n    }\n\n    hostname = hostname.split(':')[0];\n    hostname = hostname.split('?')[0];\n\n    return hostname || '';\n  }\n\n  /**\n     * Enables all iFrameConsents\n     */\n  public enableAll(): void {\n    CookieManager.setCookie({\n      name: this.cookieName,\n      value: '*',\n      expirationYears: this.expirationYears,\n    });\n\n    this.autoEnableIframes();\n  }\n\n  /**\n     * Disables all accepted iFrameConsents and deletes all in2iframeconsent Cookies\n     */\n  public disableAll(): void {\n    CookieManager.deleteCookie(this.cookieName);\n  }\n}\n\n// eslint-disable-next-line no-new\nnew In2iframeswitch();\n"],"names":["CookieManager","getCookie","name","b","document","cookie","match","pop","setCookie","value","expirationYears","domain","window","location","hostname","expirationDate","Date","setFullYear","getFullYear","expirationDateString","toUTCString","deleteCookie","this","cookieName","addButtonEvents","autoEnableIframes","In2iframeswitch","addDomainInformation","iframeSwitch","changeElementToIframe","container","attributes","getAllDataAttributes","iframe","createElement","forEach","attribute","setAttribute","parentNode","insertBefore","classList","remove","removeChild","elements","querySelectorAll","activeCookies","split","element","includes","iframeURL","getAttribute","iframeSource","extractHostname","currentCookie","parent","closest","parentSrc","innerHTML","elementStart","querySelector","addEventListener","event","currentCookies","_this","target","iframeSwitchURL","newCookie","length","selector","matchesFn","some","fn","body","parentElement","Array","from","indexOf","push","replace","url","enableAll","disableAll"],"mappings":"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"}