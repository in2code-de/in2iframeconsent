{"version":3,"file":"in2iframeconsent.modern.js","sources":["../../src/CookieManager.ts","../../src/index.ts"],"sourcesContent":["import { Cookie } from './types';\n\nexport default class CookieManager {\n  public static _getCookie(name: string): string {\n    const b = document.cookie.match(`(^|;)\\\\s*${name}\\\\s*=\\\\s*([^;]+)`);\n\n    if (b) return b.pop() || '';\n    return '';\n  }\n\n  public static _setCookie({ name, value, expirationYears }: Cookie): void {\n    const domain = window.location.hostname;\n\n    const expirationDate = new Date();\n    expirationDate.setFullYear(expirationDate.getFullYear() + expirationYears);\n    const expirationDateString = expirationDate.toUTCString();\n\n    document.cookie = `${name}=${value};expires=${expirationDateString};domain=${domain};path=/;SameSite=None;secure`;\n  }\n\n  public static _deleteCookie(name: string): void {\n    this._setCookie({\n      name,\n      value: '',\n      expirationYears: -1,\n    });\n  }\n}\n","import { version } from '../package.json';\nimport { IframeDataAttribute } from './types';\nimport CookieManager from './CookieManager';\n\nclass In2iframeswitch {\n  private _cookieName: string = 'iframeswitch';\n\n  private _expirationYears: number = 10;\n\n  constructor() {\n    this._addButtonEvents();\n    this._autoEnableIframes();\n    In2iframeswitch._addDomainInformation();\n\n    window.iframeSwitch = this || {};\n  }\n\n  /**\n     * Replaces iFrameconsentbox with correct iFrame\n     * @param container\n     * @private\n     */\n  private static _changeElementToIframe(container: HTMLElement): void {\n    const attributes = In2iframeswitch._getAllDataAttributes(container);\n    const iframe = document.createElement('iframe');\n\n    attributes.forEach((attribute) => {\n      iframe.setAttribute(\n        attribute.name,\n        attribute.value,\n      );\n    });\n\n    const parentNode = container.parentNode as HTMLElement;\n    parentNode.insertBefore(iframe, container);\n    parentNode.classList.remove('iframeswitch-init');\n    parentNode.removeChild(container);\n  }\n\n  /**\n     * Enable Iframe, if src of the iframe is set in cookie for iframeswitch\n     * @private\n     */\n  private _autoEnableIframes(): void {\n    const elements = document.querySelectorAll<HTMLElement>('[data-iframeswitch-src]');\n    const cookieString = CookieManager._getCookie(this._cookieName);\n    const activeCookies: string[] = cookieString.split(',');\n\n    elements.forEach((element) => {\n      if (activeCookies.includes('*')) {\n        In2iframeswitch._changeElementToIframe(element);\n        return;\n      }\n\n      const iframeURL: string | null = element.getAttribute('data-iframeswitch-src');\n\n      if (iframeURL) {\n        const iframeSource = In2iframeswitch._extractHostname(iframeURL);\n\n        activeCookies.forEach((currentCookie) => {\n          if (currentCookie === iframeSource) {\n            In2iframeswitch._changeElementToIframe(element);\n          }\n        });\n      }\n    });\n  }\n\n  /**\n     * Replace <span data-iframeswitch-uri=\"true\"></span> with the iFrame URL.\n     * So it can be used inside the container\n     */\n  private static _addDomainInformation(): void {\n    const elements = document.querySelectorAll<HTMLElement>('[data-iframeswitch-uri]');\n    elements.forEach((element) => {\n      const iframeSwitchUri = element;\n\n      const parent = In2iframeswitch._closest(\n        iframeSwitchUri,\n        '[data-iframeswitch-src]',\n      );\n\n      if (parent) {\n        const parentSrc = parent.getAttribute('data-iframeswitch-src') || 'error, domain not found';\n        iframeSwitchUri.innerHTML = In2iframeswitch._extractHostname(parentSrc);\n      }\n    });\n  }\n\n  private _addButtonEvents(): void {\n    const elements = document.querySelectorAll<HTMLElement>('[data-iframeswitch-src]');\n\n    elements.forEach((element) => {\n      const elementStart = element.querySelector('[data-iframeswitch-submit]');\n\n      if (elementStart) {\n        elementStart.addEventListener(\n          'click',\n          (event) => {\n            const currentCookies = CookieManager._getCookie(this._cookieName);\n            if (currentCookies === '*') return;\n\n            const container = In2iframeswitch._closest(\n              event.target as HTMLElement,\n              '[data-iframeswitch-src]',\n            );\n            if (!container) return;\n\n            const iframeSwitchURL = container.getAttribute('data-iframeswitch-src');\n            if (!iframeSwitchURL) return;\n\n            const newCookie = In2iframeswitch._extractHostname(iframeSwitchURL);\n\n            CookieManager._setCookie({\n              name: this._cookieName,\n              value: currentCookies.length > 0 ? `${currentCookies},${newCookie}` : newCookie,\n              expirationYears: this._expirationYears,\n            });\n\n            this._autoEnableIframes();\n          },\n        );\n      }\n    });\n  }\n\n  /**\n     * JavaScript pendent to jQuerys closest() function\n     */\n  private static _closest(element: HTMLElement, selector: string): HTMLElement | null {\n    let matchesFn;\n\n    // find vendor prefix\n    [\n      'matches',\n      'webkitMatchesSelector',\n      'mozMatchesSelector',\n      'msMatchesSelector',\n      'oMatchesSelector',\n    ].some((fn) => {\n      // @ts-ignore\n      if (typeof document.body[fn] === 'function') {\n        matchesFn = fn;\n        return true;\n      }\n      return false;\n    });\n\n    let parent: HTMLElement;\n\n    // traverse parents\n    while (element) {\n      // @ts-ignore\n      parent = element.parentElement;\n      // @ts-ignore\n      if (parent && parent[matchesFn](selector)) {\n        return parent;\n      }\n\n      // eslint-disable-next-line no-param-reassign\n      element = parent;\n    }\n\n    return null;\n  }\n\n  private static _getAllDataAttributes(container: HTMLElement): IframeDataAttribute[] {\n    const attributes: { name: string, value: string }[] = [];\n\n    Array.from(container.attributes).forEach((attribute) => {\n      if (attribute.name.indexOf('data-iframeswitch-') !== -1) {\n        attributes.push({\n          name: attribute.name.replace('data-iframeswitch-', ''),\n          value: attribute.value,\n        });\n      }\n    });\n\n    return attributes;\n  }\n\n  private static _extractHostname(url: string): string {\n    let hostname: string = (url.indexOf('//') > -1)\n      ? url.split('/')[2]\n      : url.split('/')[0];\n\n    hostname = hostname.split(':').shift() as string;\n    hostname = hostname.split('?').shift() as string;\n\n    return hostname || '';\n  }\n\n  /**\n     * Enables all iFrameConsents\n     */\n  public enableAll(): void {\n    CookieManager._setCookie({\n      name: this._cookieName,\n      value: '*',\n      expirationYears: this._expirationYears,\n    });\n\n    this._autoEnableIframes();\n  }\n\n  /**\n     * Disables all accepted iFrameConsents and deletes all in2iframeconsent Cookies\n     */\n  public disableAll(): void {\n    CookieManager._deleteCookie(this._cookieName);\n  }\n\n  public static getVersion(): void {\n    // eslint-disable-next-line no-console\n    console.log(`in2iframeconsent is running on version ${version} ðŸŒˆ`);\n  }\n}\n\n// eslint-disable-next-line no-new\nnew In2iframeswitch();\n"],"names":["CookieManager","static","name","b","document","cookie","match","pop","value","expirationYears","domain","window","location","hostname","expirationDate","Date","setFullYear","getFullYear","expirationDateString","toUTCString","this","_setCookie","In2iframeswitch","constructor","_cookieName","_expirationYears","_addButtonEvents","_autoEnableIframes","_addDomainInformation","iframeSwitch","container","attributes","_getAllDataAttributes","iframe","createElement","forEach","attribute","setAttribute","parentNode","insertBefore","classList","remove","removeChild","elements","querySelectorAll","activeCookies","_getCookie","split","element","includes","_changeElementToIframe","iframeURL","getAttribute","iframeSource","_extractHostname","currentCookie","iframeSwitchUri","parent","_closest","parentSrc","innerHTML","elementStart","querySelector","addEventListener","event","currentCookies","target","iframeSwitchURL","newCookie","length","selector","matchesFn","some","fn","body","parentElement","Array","from","indexOf","push","replace","url","shift","enableAll","disableAll","_deleteCookie","console","log"],"mappings":"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"}